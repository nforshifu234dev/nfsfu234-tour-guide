# This workflow automatically creates a release when a pull request is merged
# into the main branch. It uses `standard-version` to handle versioning and changelog generation, and `softprops/action-gh-release` to create a GitHub release.

name: Automated Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Configure Git User
        run: |
          git config --global user.email "bot@nforshifu234.dev"
          git config --global user.name "NFORSHIFU234 Dev Release Bot"

      - name: Run Standard Version and Push Tags
        id: standard-version
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          npm run release
          git push --follow-tags origin main
          NEW_TAG=v$(node -p "require('./package.json').version")
          echo "tag_name=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Refetch Repository with Tags
        run: |
          git fetch --tags origin main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.standard-version.outputs.tag_name }}
          name: NFSFU234TourGuide@${{ steps.standard-version.outputs.tag_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}